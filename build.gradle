/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'koby' at '4/16/17 8:11 PM' with Gradle 2.6
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.6/userguide/tutorial_java_projects.html
 */

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.bmuschko:gradle-docker-plugin:3.0.6'
    }
}

import com.bmuschko.gradle.docker.tasks.container.*
import com.bmuschko.gradle.docker.tasks.image.*

apply plugin: 'com.bmuschko.docker-remote-api'

task createDockerfile(type: Dockerfile) {
    destFile = project.file('build/mydockerfile/Dockerfile')
    from 'ubuntu:12.04'
    maintainer 'Benjamin Muschko "benjamin.muschko@gmail.com"'
}

task buildImage(type: DockerBuildImage) {
    dependsOn createDockerfile
    inputDir = createDockerfile.destFile.parentFile
    tag = 'ka/testimage'
}

task createContainer(type: DockerCreateContainer) {
    dependsOn buildImage
    targetImageId { buildImage.getImageId() }
    attachStdout = true
    attachStderr = true
    cmd = ["/opt/files/run.sh"]
}

task addFilesToContainer(type: DockerCopyFileToContainer) {
    dependsOn createContainer
    hostPath "${projectDir}/files"
    remotePath '/opt' 
    targetContainerId { createContainer.getContainerId() }	
}

task startContainer(type: DockerStartContainer) {
    dependsOn addFilesToContainer
    finalizedBy 'logContainer'
    targetContainerId { createContainer.getContainerId() }
}

task logContainer(type: DockerLogsContainer) {
    stdOut = true
    stdErr = true
    targetContainerId { createContainer.getContainerId() }
}
